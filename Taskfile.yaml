version: '3'

tasks:
  default:
    silent: true
    cmds:
      - task --list

  install:
    desc: Setup the project dependencies
    cmds:
      - task: brew-install
      - task: bun-install
      - task: build
      - task: precommit

  build:
    dir: docs
    desc: build all apps and package
    cmd: bun run build

  bun-install:
    dir: docs
    desc: install the dependencies listed in package.json
    cmds:
      - bun install

  bun-reinstall:
    dir: docs
    desc: reinstall the dependencies listed in package.json
    cmds:
      - task: clean
      - task: bun-install

  clean:
    dir: docs
    desc: clean all apps and package
    cmd: bun run clean

  generate-api-docs:
    dir: docs
    desc: generate api docs
    cmd: bun docusaurus gen-api-docs all

  clean-api-docs:
    dir: docs
    desc: clean api docs
    cmd: bun docusaurus clean-api-docs all

  regenerate-api-docs:
    dir: docs
    desc: regenerate api docs
    cmds:
      - task: clean-api-docs
      - task: generate-api-docs

  generate-graphql-docs:
    dir: docs
    desc: generate graphql docs
    cmd: npx docusaurus docs:generate:graphql

  generate:
    dir: docs
    desc: generate all docs
    cmds:
      - task: regenerate-api-docs
      - task: generate-graphql-docs

  dev:
    dir: docs
    desc: develop all apps
    cmds:
      - bun dev

  precommit-full:
    desc: Lint the project against all files
    aliases: [precommit]
    cmds:
      - pre-commit install && pre-commit install-hooks
      - pre-commit autoupdate
      - pre-commit run --show-diff-on-failure --color=always --all-files

  brew-install:
    desc: Install workstation dependencies with Brew
    cmds:
      - task: update-brew
      - echo "Installing {{.DEPS}} via homebrew..."
      - brew install {{.DEPS}} {{.CLI_ARGS}}
      - echo "Installed {{.DEPS}} via homebrew!"
    deps:
      - task: brew-installed
    status:
      - '[ -f $(brew --prefix)/bin/{{.DEPS}} ]'
    vars:
      DEPS: >-
        oven-sh/bun/bun pre-commit #magic___^_^___line
  brew-installed:
    silent: true
    desc: check if Homebrew is installed
    cmds:
      - '[ -x "$(command -v brew)" ] || (echo "Homebrew is not installed, please install it from https://brew.sh" && exit 1)'

  update-brew:
    desc: Update Homebrew and upgrade all packages
    cmds:
      - brew update && brew upgrade && brew cleanup || true
